Working with the ChatGPT Agent in DesktopApplicationTemplate
==========================================================

Effective Collaboration Techniques
----------------------------------
- Provide clear goals, file paths, and context for each task.
- Prefer small, incremental changes that compile and test quickly.
- Run programmatic checks after modifications and share their output.
- Use `rg` or targeted `find` commands instead of recursive `ls` or `grep`.

GitHub Workflow Notes
---------------------
- Keep changes on the main branch and make atomic commits with descriptive messages.
- After all code updates, run `dotnet test` and include the output in the pull request.
- Only committed code is evaluated, so ensure the working tree is clean before calling `make_pr`.

Draw.io Integration
-------------------
- Store architecture diagrams as `.drawio` files in the `design` directory.
- Export diagrams to `.png` for quick review while keeping the editable `.drawio` source under version control.
- Describe diagram updates in commit messages or pull requests so reviewers understand their purpose.

Unit Testing Insights
---------------------
- Tests use xUnit with Moq for mocking and reside in `DesktopApplicationTemplate.Tests`.
- Prefer isolated tests that validate one behavior and use expressive method names.
- Configure dependencies through DI to keep tests focused and deterministic.
- Run tests with `dotnet test` to ensure stability across platforms and CI environments.

Miscellaneous Tips
------------------
- Validate all file paths, indexes, and dictionary keys before use to avoid runtime errors.
- Favor async/await patterns to keep the UI responsive and avoid deadlocks.
- Reuse existing services and view models instead of duplicating logic.
- Maintain clear, purpose-driven variable names for readability and maintainability.
